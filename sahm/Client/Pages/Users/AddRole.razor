@page "/AddRole/{Id}"
@inject AuthenticationHttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime js

<AuthorizeView Context="aContext">
    <Authorized>
        <PageTitle>@ApplicationResource.AddRoleToUser</PageTitle>

        <div class="card">
            <div class="card-header">
                @ApplicationResource.AddRoleToUser
            </div>
            <div class="card-body">
                <EditForm Model="userRolesDTO" OnValidSubmit="Save">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="form-group">
                        <label>@ApplicationResource.Role</label>
                        <select @bind="userRolesDTO.RoleName" class="form-control">
                        <option value="">@ApplicationResource.ChooseRole</option>
                        <option value="SuperAdmin">@ApplicationResource.role_SuperAdmin</option>
                        <option value="MaintenanceAdmin">@ApplicationResource.role_MaintenanceAdmin</option>
                        <option value="QulityAdmin">@ApplicationResource.role_QulityAdmin</option>
                        <option value="BuyAdmin">@ApplicationResource.role_BuyAdmin</option>
                        <option value="SuperVisor">@ApplicationResource.role_SuperVisor</option>
                        <option value="User">@ApplicationResource.role_User</option>

                    </select>
                        <div class="form-group d-flex justify-content-center mt-2">
                            <button class="btn btn-primary mx-2" type="submit">@ApplicationResource.save</button>
                            <button class="btn btn-dark" @onclick="Cancel">@ApplicationResource.Cancel</button>
                        </div>
                    </div>

                </EditForm>
            </div>
        </div>


    </Authorized>
    <NotAuthorized>
        <div class="alert alert-danger" role="alert">
            you are not authoriazed
        </div>
    </NotAuthorized>
</AuthorizeView>


@code {
    [Parameter]
    public string Id { get; set; }
    private UserRolesDTO? userRolesDTO { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (!string.IsNullOrWhiteSpace(Id))
        {
            userRolesDTO = new();
            userRolesDTO.User_Id = new Guid(Id);
        }

    }

    async void Save()
    {
        if (Id is not null)
        {
            var result = await Http.SetRole(userRolesDTO);
            if (result)
            {
                NavigationManager.NavigateTo("/RoleForUser");
            }
            else
            {
                await js.InvokeVoidAsync("alert", @ApplicationResource.there_is_a_problem);
            }
        }
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("/RoleForUser");
    }

}
