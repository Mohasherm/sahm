@page "/register"
@inject AuthenticationHttpClient Http
@inject JobTitleService jobTitleService


<PageTitle>Register</PageTitle>

<h1>Register</h1>

@if (!succeeded)
{
    <EditForm Model="@userRegisterDTO" OnValidSubmit="@register">
        <CustomValidation @ref="customValidation" />
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <InputText class="form-control" id="Name" @bind-Value="userRegisterDTO.Name" placeholder="Name" />
        </div>

        <div class="mb-3">
            <InputText class="form-control" id="Email" @bind-Value="userRegisterDTO.Email" placeholder="Email" />
        </div>

        <div class="mb-3">
            <InputText class="form-control" id="Password" @bind-Value="userRegisterDTO.Password" placeholder="Password" />
        </div>

        <div class="mb-3">
            <InputText class="form-control" id="ConfirmPassword" @bind-Value="userRegisterDTO.ConfirmPassword" placeholder="ConfirmPassword" />
        </div>

        <div class="mb-3">
            <InputText class="form-control" id="ConfirmPassword" @bind-Value="userRegisterDTO.ConfirmPassword" placeholder="Confirm password" />
        </div>
        @if (lst_JobTitleDTO != null)
        {

            <div class="mb-3">
                <InputSelect class="form-control" id="JobTitle" @bind-Value="userRegisterDTO.JobTitle">
                    @foreach (var item in lst_JobTitleDTO)
                    {
                        <option value="@item.Id">
                            @item.Name
                        </option>
                    }
                </InputSelect>
            </div>
        }

        <div class="mb-3">
            <InputText class="form-control" id="Mobile" @bind-Value="userRegisterDTO.Mobile" placeholder="+966.." />
        </div>

        <div class="mb-3">
            <InputText class="form-control" id="PicURL" @bind-Value="userRegisterDTO.PicURL" />
        </div>

        @if (!registering)
        {
            <button class="btn btn-primary" type="submit">Submit</button>
        }
        else
        {
            <p>
                Registering...
            </p>
        }
    </EditForm>
}
else
{
    <p>
        Registration successful! <a href="login">Click here to login</a>.
    </p>
}

@code {
    private UserRegisterDTO userRegisterDTO = new();
    private CustomValidation? customValidation;
    private bool registering;
    private bool succeeded;
    private List<JobTitleDTO> lst_JobTitleDTO = new();


    protected override async Task OnInitializedAsync()
    {
        lst_JobTitleDTO = await jobTitleService.GetAll();
    }

    private async Task register()
    {
        registering = true;

        var result = await Http.RegisterUser(userRegisterDTO);

        if (result.Succeeded)
        {
            succeeded = true;
        }
        else
        {
            customValidation?.ClearErrors();
            var errors = new Dictionary<string, List<string>>();
            errors.Add("", result.Errors.ToList());
            customValidation?.DisplayErrors(errors);
        }

        registering = false;
    }
}