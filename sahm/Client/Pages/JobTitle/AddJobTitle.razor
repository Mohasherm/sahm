@page "/AddJobTitle"
@page "/EditJobTitle/{Id:int}"
@inject JobTitleService ser
@inject NavigationManager navManager
@inject IJSRuntime js

<AuthorizeView Context="aContext">
    <Authorized>
        <PageTitle>@title</PageTitle>

        <div class="panel panel-info">
            <div class="panel-heading d-flex justify-content-between">
                <h5>@title</h5>
            </div>
            <div class="panel-body">
                <div class="table-responsive nomargin">
                    <EditForm Model="jobTitleDTO" OnValidSubmit="Save">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <div class="form-group">
                            <label>@ApplicationResource.JobTitle</label>
                            <InputText class="form-control mb-2" @bind-Value="jobTitleDTO.Name" placeholder="Name"></InputText>

                            <div class="form-group d-flex justify-content-center">
                                <button class="btn mx-2 btn-submit" type="submit">@ApplicationResource.save</button>
                                <button class="btn btn-cancel" @onclick="Cancel">@ApplicationResource.Cancel</button>
                            </div>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>

    </Authorized>
    <NotAuthorized>
        <div class="alert alert-danger" role="alert">
            @ApplicationResource.you_are_not_authoriazed
        </div>
    </NotAuthorized>
</AuthorizeView>


@code {
    [Parameter]
    public int Id { get; set; }
    private JobTitleDTO? jobTitleDTO = new();
    protected string title = "";



    protected override async Task OnParametersSetAsync()
    {
        if (Id > 0)
        {
            jobTitleDTO = await ser.GetById(Id);
            title = @ApplicationResource.jobeTitleEdit;
        }
        else
        {
            title = @ApplicationResource.jobeTitleAdd;
        }
    }

    async void Save()
    {
        bool result = false;

        if (Id > 0)
        {
            result = await ser.Update(jobTitleDTO, Id);
        }
        else
        {
            result = await ser.Insert(jobTitleDTO);
        }

        if (result)
        {
            navManager.NavigateTo("/JobTitles");
        }
        else
        {
            await js.InvokeVoidAsync("alert", @ApplicationResource.there_is_a_problem);
        }
    }

    void Cancel()
    {
        navManager.NavigateTo("/JobTitles");
    }

}




