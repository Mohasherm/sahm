@page "/DeleteJobTitle/{Id:int}"
@inject JobTitleService ser
@inject NavigationManager navManager
@inject IJSRuntime js

<AuthorizeView>
    <Authorized>
        <PageTitle>@ApplicationResource.Delete</PageTitle>

        @if (jobTitleDTO != null)
        {
            <div class="card">
                <div class="card-header">
                    @ApplicationResource.JobeTitle_Info
                </div>
                <div class="card-body">
                    <table class="table">
                        <tbody>
                            <tr>
                                <td><strong>@ApplicationResource.JobeTitle</strong></td>
                                <td>@jobTitleDTO.Name</td>
                            </tr>
                        </tbody>
                    </table>
                    <div class="form-group d-flex justify-content-center">
                        <button class="btn btn-danger mx-2" @onclick="Delete">@ApplicationResource.Delete</button>
                        <button class="btn btn-dark" @onclick="Cancel">@ApplicationResource.Cancel</button>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="alert alert-info" role="alert">
                @ApplicationResource.no_data_found
            </div>
        }
    </Authorized>
    <NotAuthorized>
        <div class="alert alert-danger" role="alert">
            @ApplicationResource.you_are_not_authoriazed
        </div>
    </NotAuthorized>
</AuthorizeView>


@code {
    [Parameter]
    public int Id { get; set; }
    private JobTitleDTO? jobTitleDTO = new();

    protected override async Task OnParametersSetAsync()
    {
        if (Id > 0)
        {
            jobTitleDTO = await ser.GetById(Id);
        }

    }
    async void Delete()
    {
        if (jobTitleDTO != null)
        {
            var result = await ser.Delete(Id);
            if (result)
            {
                navManager.NavigateTo("/JobTitles");
            }
            else
            {
                await js.InvokeVoidAsync("alert", @ApplicationResource.there_is_a_problem);
            }
        }
    }
    void Cancel()
    {
        navManager.NavigateTo("/JobTitles");
    }
}