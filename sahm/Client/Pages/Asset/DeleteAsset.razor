@page "/DeleteAsset/{Id:int}"
@inject AssetService ser
@inject NavigationManager navManager
@inject IJSRuntime js

<AuthorizeView>
    <Authorized>
        <PageTitle>@ApplicationResource.Delete</PageTitle>

        @if (assetDTO != null)
        {
            <div class="panel panel-info">
                <div class="panel-heading d-flex justify-content-between">
                    <h5> @ApplicationResource.Material_Info</h5>
                </div>
                <div class="panel-body">
                    <div class="table-responsive nomargin">
                        <table class="table">
                            <tbody>
                                <tr>
                                    <td><strong>@ApplicationResource.Material</strong></td>
                                    <td>@assetDTO.Name</td>
                                </tr>
                            </tbody>
                        </table>
                        <div class="form-group d-flex justify-content-center">
                            <button class="btn btn-danger mx-2" @onclick="Delete">@ApplicationResource.Delete</button>
                            <button class="btn btn-cancel" @onclick="Cancel">@ApplicationResource.Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="alert alert-info" role="alert">
                @ApplicationResource.no_data_found
            </div>
        }
    </Authorized>
    <NotAuthorized>
        <div class="alert alert-danger" role="alert">
            @ApplicationResource.you_are_not_authoriazed
        </div>
    </NotAuthorized>
</AuthorizeView>


@code {
    [Parameter]
    public int Id { get; set; }
    private AssetDTO? assetDTO = new();

    protected override async Task OnParametersSetAsync()
    {
        if (Id > 0)
        {
            assetDTO = await ser.GetById(Id);
        }

    }
    async void Delete()
    {
        if (assetDTO != null)
        {
            var result = await ser.Delete(Id);
            if (result)
            {
                navManager.NavigateTo("/Assets");
            }
            else
            {
                await js.InvokeVoidAsync("alert", @ApplicationResource.there_is_a_problem);
            }
        }
    }
    void Cancel()
    {
        navManager.NavigateTo("/Assets");
    }
}